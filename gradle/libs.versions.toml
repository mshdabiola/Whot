[versions]
admob = "22.4.0"
androidGradlePlugin = "8.3.0-alpha12"
androidx-compose-foundation = "1.5.4"
androidxActivity = "1.8.1"
androidxCompose = "1.5.4"
androidxComposeCompiler = "1.5.5-dev-k2.0.0-Beta1-06b8ae672a4"
androidxComposeMaterial3 = "1.2.0-alpha10"
androidxComposeRuntimeTracing = "1.0.0-alpha04"
androidxConstraintLayout = "1.1.0-alpha13"
androidxCore = "1.12.0"
androidxCoreSplashscreen = "1.0.1"
androidxDataStore = "1.1.0-alpha07"
androidxEspresso = "3.5.1"
androidxLifecycle = "2.6.2"
androidxMacroBenchmark = "1.2.2"
androidxMetrics = "1.0.00-alpha04"
androidxProfileinstaller = "1.3.1"
androidxSavedState = "1.2.1"
androidxTestCore = "1.5.0"
androidxTestExt = "1.1.5"
androidxTestRules = "1.5.0"
androidxTestRunner = "1.5.2"
androidxTracing = "1.2.0"
androidxUiAutomator = "2.3.0-alpha05"
androidxWindowManager = "1.2.0"
decomposeVersion = "2.2.1"
firebaseBom = "32.7.0"
firebaseCrashylyticsPlugins = "2.9.9"
junit4 = "4.13.2"
kotlin = "2.0.0-Beta1"
kotlinxCollectionImmutable = "0.3.5"
kotlinxCoroutines = "1.7.3"
kotlinxSerializationJson = "1.6.2"
littleVersion = "0.7.0"
maneVersion = "0.44.0"
turbine = "1.0.0"
timber = "5.0.1"
firebaseCrashlyticsPlugin = "2.9.9"
firebasePerfPlugin = "1.4.2"
gmsPlugin = "4.4.0"
composePlugin = "1.5.11"

kotlinxDatetime = "0.5.0"


androidxWork = "2.9.0"
androidxStartup = "1.1.1"


playGame = "19.0.0"
playReview = "2.0.1"
playUpdate = "2.1.0"
playCoroutine = "1.7.3"

koin = "3.5.0"
koinTest = "3.5.0"
koinCompose = "3.5.0"


multiplatform_settings = "1.0.0"

sqlDelight = "2.0.0"

ktor = "2.3.7"
androidx-baselineprofile = "1.2.2"
logback = "1.4.11"

kermit = "2.0.2"

secrets = "2.0.1"

windowSizeClass = "0.3.1"

androidSvg = "1.4"





[libraries]
admob-service = { module = "com.google.android.gms:play-services-ads-lite", version.ref = "admob" }
# Dependencies of the included build-logic
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidx-benchmark-macro = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidxMacroBenchmark" }

androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose-foundation" }
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidxCompose" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "androidxConstraintLayout" }
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidxCompose" }

androidx-compose-material3-windowSizeClass = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "windowSizeClass" }
androidx-lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }

androidx-compose-ui-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidxCompose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidxCompose" }

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxCoreSplashscreen" }

androidx-dataStore-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "androidxDataStore" }

androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-metrics = { module = "androidx.metrics:metrics-performance", version.ref = "androidxMetrics" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidxProfileinstaller" }
androidx-savedstate-ktx = { module = "androidx.savedstate:savedstate-ktx", version.ref = "androidxSavedState" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspresso" }
androidx-test-ext = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestExt" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidxTestRules" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidxUiAutomator" }
androidx-tracing-ktx = { module = "androidx.tracing:tracing-ktx", version.ref = "androidxTracing" }
androidx-window-manager = { module = "androidx.window:window", version.ref = "androidxWindowManager" }

koin_android_workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidxStartup" }
androidx-work-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWork" }
androidx-work-testing = { module = "androidx.work:work-testing", version.ref = "androidxWork" }

decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decomposeVersion" }
decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decomposeVersion" }
decompose-compose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decomposeVersion" }
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }

firebase-cloud-messaging = { group = "com.google.firebase", name = "firebase-messaging-ktx" }
firebase-remoteconfig = { group = "com.google.firebase", name = "firebase-config-ktx" }
firebase-message = { group = "com.google.firebase", name = "firebase-inappmessaging-display-ktx" }

firebase-auth = { group = "com.google.firebase", name = "firebase-auth-ktx" }

firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
firebase-crashlytics-gradle = { group = "com.google.firebase", name = "firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsPlugin" }

firebase-performance = { group = "com.google.firebase", name = "firebase-perf-ktx" }
firebase-performance-gradle = { group = "com.google.firebase", name = "perf-plugin", version.ref = "firebasePerfPlugin" }

play-game = { module = "com.google.android.gms:play-services-games-v2", version.ref = "playGame" }
play-review = { module = "com.google.android.play:review", version.ref = "playReview" }
play-review-kts = { module = "com.google.android.play:review-ktx", version.ref = "playReview" }
play-update = { module = "com.google.android.play:app-update", version.ref = "playUpdate" }
play-update-kts = { module = "com.google.android.play:app-update-ktx", version.ref = "playUpdate" }
play-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "playCoroutine" }

junit4 = { module = "junit:junit", version.ref = "junit4" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlinx-collection-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionImmutable" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

koin_core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin_android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin_android_compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin_test = { module = "io.insert-koin:koin-test", version.ref = "koinTest" }
koin_test_junit = { module = "io.insert-koin:koin-test-junit4", version.ref = "koinTest" }
koin_test_junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koinTest" }
koin_android_test = { module = "io.insert-koin:koin-android-test", version.ref = "koinTest" }

multiplatform_settings_core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform_settings" }
multiplatform_settings_noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform_settings" }
multiplatform_settings_coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform_settings" }
multiplatform_settings_serializtion = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform_settings" }
multiplatform_settings_test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatform_settings" }
multiplatform_settings_datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform_settings" }

sqldelight_plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }

sqldelight_runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight_coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight_android_driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight_sqlite_driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqldelight_primitive_adapter = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit4" }

kermit-log = { module = "co.touchlab:kermit", version.ref = "kermit" }
# Dependencies of the included build-logic

compose-gradlePlugin = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "composePlugin" }

android-svg-arr = { module = "com.caverock:androidsvg-aar", version.ref = "androidSvg" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-test = { id = "com.android.test", version.ref = "androidGradlePlugin" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashylyticsPlugins" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
little = { id = "nl.littlerobots.version-catalog-update", version.ref = "littleVersion" }
manes = { id = "com.github.ben-manes.versions", version.ref = "maneVersion" }
gms = { id = "com.google.gms.google-services", version.ref = "gmsPlugin" }
#kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidx-baselineprofile = { id = "androidx.baselineprofile", version.ref = "androidx-baselineprofile" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-gradlePlugin = { id = "org.jetbrains.compose", version.ref = "composePlugin" }

